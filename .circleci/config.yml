# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2.1

commands:
  checkout_and_restore_cache:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
  workspace:
    steps:
    - attach_workspace:
        at: ~/circleci

executors:
  node:
    docker:
      - image: circleci/node:12.8.0
    working_directory: ~/circleci

jobs:
  install:
    executor: node
    steps:
      - checkout_and_restore_cache
      - run: npm run setup
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .
      - save_cache:
          key: source-v1-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./acme.sh
            - build
  lint:
    executor: node
    steps:
      - workspace
      - checkout_and_restore_cache
      - run: npm install
      - run: npm run prettier:write
  test:
    executor: node
    steps:
      - workspace
      - checkout_and_restore_cache
      - run: npm run test
  build:
    executor: node
    steps:
      - workspace
      - checkout_and_restore_cache
      - run: npm run build
  deploy:
      executor: node
      steps:
        - add_ssh_keys:
            fingerprints:
            - "a1:09:f8:12:0e:f2:aa:75:39:62:1f:31:55:d3:0c:a8"
        - workspace
        - checkout_and_restore_cache
        - run: ls -a
        - run:
            name: Deploy Over SSH
            # command: scp -r -o StrictHostKeyChecking=no ./build $SSH_USER@$SSH_HOST:./myProxy
            # command: ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "touch test"
            # command: git remote add server  ssh://dev@167.71.153.58/home/dev/david/repo/myproxy.git
            command: git remote add prod dev@innout.life:/home/dev/prodProxy && git push prod master
        - run: echo âœ… YEEEES! ðŸŽ‰

workflows:
  version: 2
  integration:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - build:
          requires:
            - install
      - deploy:
          requires:
            - install
            - build
      # - deploy:
          # requires:
          #   - build
          #   - lint
          #   - test
          # filters:
          #   branches:
          #     only: master